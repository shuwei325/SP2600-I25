xaxis = list(title = "X-Axis"),
yaxis = list(title = "Y-Axis", range = c(0, 10)),
zaxis = list(title = "Z-Axis")
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = "X-Axis"),
yaxis = list(title = "Y-Axis"),
zaxis = list(title = "Z-Axis")
))
tmean
z1 <- dnorm(x, mean = tmean[1],sd = 1)
z2 <- dnorm(x, mean = tmean[2],sd = 1)
z3 <- dnorm(x, mean = tmean[3],sd = 1)
df1 <- data.frame(x = x, t = 4, z = z1)
df2 <- data.frame(x = x, t = 5, z = z2)
df3 <- data.frame(x = x, t = 9, z = z3)
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = "X-Axis"),
yaxis = list(title = "Y-Axis", range = c(0, 10)),
zaxis = list(title = "Z-Axis")
))
x <- seq(5,20,0.1)
tmean <- c(10, 13, 10)
z1 <- dnorm(x, mean = tmean[1],sd = 1)
z2 <- dnorm(x, mean = tmean[2],sd = 1)
z3 <- dnorm(x, mean = tmean[3],sd = 1)
df1 <- data.frame(x = x, t = 4, z = z1)
df2 <- data.frame(x = x, t = 5, z = z2)
df3 <- data.frame(x = x, t = 9, z = z3)
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = "X-Axis"),
yaxis = list(title = "Y-Axis", range = c(0, 10)),
zaxis = list(title = "Z-Axis")
))
t <- seq(1,10,1)
t
t <- seq(1,10,1)
sin(t)
plot(sin(t))
plot(t,sin(t))
plot(t,sin(t),type="b")
5*sin(t)
plot(t,sin(t),type="b")
fmean <- 5*sin(t)
plot(t,fmean,type="b")
fmean <- 10+5*sin(t)
plot(t,fmean,type="b")
fmean <- 10+5*sin(2*t)
plot(t,fmean,type="b")
fmean <- 10+5*sin(1/2*t)
plot(t,fmean,type="b")
tmean <- c(10, 13, 10)
t <- seq(1,10,0.1)
fmean <- 10+5*sin(1/2*t)
fmean
t
data.frame(t,fmean)
which(t=4)
which(t==4)
fmean[which(t==4)]
fmean[which(t==5)]
fmean[which(t==9)]
mean1 <- fmean[which(t==4)]
mean2 <- fmean[which(t==5)]
mean3 <- fmean[which(t==9)]
plot(t,fmean)
fmean <- 10+5*sin(1/pi*t)
data.frame(t,fmean)
plot(t,fmean)
fmean <- 10+5*sin(2/pi*t)
data.frame(t,fmean)
plot(t,fmean)
data.frame(t,fmean)
plot(t,fmean)
mean1 <- fmean[which(t==4)]
mean2 <- fmean[which(t==5)]
mean3 <- fmean[which(t==9)]
z1 <- dnorm(x, mean = mean1,sd = 1)
z2 <- dnorm(x, mean = mean2,sd = 1)
z3 <- dnorm(x, mean = mean3,sd = 1)
df1 <- data.frame(x = x, t = 4, z = z1)
df2 <- data.frame(x = x, t = 5, z = z2)
df3 <- data.frame(x = x, t = 9, z = z3)
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = "X-Axis"),
yaxis = list(title = "Y-Axis", range = c(0, 10)),
zaxis = list(title = "Z-Axis")
))
plot(t,fmean)
x <- seq(0,20,0.1)
t <- seq(1,10,0.1)
fmean <- 10+5*sin(2/pi*t)
data.frame(t,fmean)
plot(t,fmean)
mean1 <- fmean[which(t==4)]
mean2 <- fmean[which(t==5)]
mean3 <- fmean[which(t==9)]
z1 <- dnorm(x, mean = mean1,sd = 1)
z2 <- dnorm(x, mean = mean2,sd = 1)
z3 <- dnorm(x, mean = mean3,sd = 1)
df1 <- data.frame(x = x, t = 4, z = z1)
df2 <- data.frame(x = x, t = 5, z = z2)
df3 <- data.frame(x = x, t = 9, z = z3)
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = "X-Axis"),
yaxis = list(title = "Y-Axis", range = c(0, 10)),
zaxis = list(title = "Z-Axis")
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = "X-Axis"),
yaxis = list(title = "Y-Axis", range = c(0, 10)),
zaxis = list(title = "Z-Axis", range = c(0,1))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = "X-Axis"),
yaxis = list(title = "Y-Axis", range = c(0, 10)),
zaxis = list(title = "Z-Axis", range = c(0,8))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = "X"),
yaxis = list(title = "time", range = c(0, 10)),
zaxis = list(title = "f(x)", range = c(0,0.8))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = "X"),
yaxis = list(title = "time", range = c(0, 10)),
zaxis = list(title = "f(x)", range = c(0,0.5))
))
dfmean <- data.frame(t,fmean,z=0)
dfmean <- data.frame(t=t,x=fmean,z=0)
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = "X"),
yaxis = list(title = "time", range = c(0, 10)),
zaxis = list(title = "f(x)", range = c(0,0.5))
))
z1 <- dnorm(x, mean = mean1,sd = 2)
z2 <- dnorm(x, mean = mean2,sd = 2)
z3 <- dnorm(x, mean = mean3,sd = 2)
df1 <- data.frame(x = x, t = 4, z = z1)
df2 <- data.frame(x = x, t = 5, z = z2)
df3 <- data.frame(x = x, t = 9, z = z3)
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = "X", range = ),
yaxis = list(title = "time", range = c(0, 10)),
zaxis = list(title = "f(x)", range = c(0,0.5))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = "X"),
yaxis = list(title = "time", range = c(0, 10)),
zaxis = list(title = "f(x)", range = c(0,0.5))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = "X"),
yaxis = list(title = "time", range = c(0, 10)),
zaxis = list(title = "f(x)", range = c(0,0.2))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = expression(X(t, omega))),
yaxis = list(title = expression(t), range = c(0, 10)),
zaxis = list(title = expression(f[X](x)), range = c(0,0.2))
))
library(latex2exp)
library(latex2exp)
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = TeX("$X(t, \\omega)")),
yaxis = list(title = TeX("Time $t$"), range = c(0, 10)),
zaxis = list(title = expression(f[X](x)), range = c(0,0.2))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = TeX("$X(t, \\omega)")),
yaxis = list(title = TeX("Time $t$"), range = c(0, 10)),
zaxis = list(title = "a"), range = c(0,0.2))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = TeX("$X(t, \\omega)")),
yaxis = list(title = TeX("Time $t$"), range = c(0, 10)),
zaxis = list(title = "a", range = c(0,0.2))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = TeX("$X(t, \\omega)")),
yaxis = list(title = TeX("Time $t$"), range = c(0, 10)),
zaxis = list(title = '&#969; #968;', range = c(0,0.2))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = '&#969'),
yaxis = list(title = TeX("Time $t$"), range = c(0, 10)),
zaxis = list(title = , range = c(0,0.2))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = '&#969'),
yaxis = list(title = TeX("Time $t$"), range = c(0, 10)),
zaxis = list(title = "2", range = c(0,0.2))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = '&omega'),
yaxis = list(title = TeX("Time $t$"), range = c(0, 10)),
zaxis = list(title = "2", range = c(0,0.2))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = '&omega;'),
yaxis = list(title = TeX("Time $t$"), range = c(0, 10)),
zaxis = list(title = "2", range = c(0,0.2))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = &omega;),
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = TeX("\\theta = 0.8 \\hat\\theta"))),
yaxis = list(title = TeX("Time $t$"), range = c(0, 10)),
zaxis = list(title = "2", range = c(0,0.2))
))
# Create the 3D plot with three curves
plot_ly() %>%
add_trace(data = df1, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 1") %>%
add_trace(data = df2, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 2") %>%
add_trace(data = df3, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
add_trace(data = dfmean, x = ~x, y = ~t, z = ~z, type = "scatter3d", mode = "lines", name = "Curve 3") %>%
layout(scene = list(
xaxis = list(title = TeX("\\theta = 0.8 \\hat\\theta")),
yaxis = list(title = TeX("Time $t$"), range = c(0, 10)),
zaxis = list(title = "2", range = c(0,0.2))
))
f <- plot_ly(alpha = 0.5) %>%
add_histogram(x=rnorm(1000),
name="Observed",
marker=list(color="darkolivegreen")
)
f %>% layout(title=TeX("\\theta = 0.8 \\hat\\theta")) %>%
config(mathjax = 'cdn')
f
f <- plot_ly(alpha = 0.5) %>%
add_histogram(x=rnorm(1000),
name="Observed",
marker=list(color="darkolivegreen")
)
f %>% layout(title=TeX("\\theta = 0.8 \\hat\\theta")) %>%
config(mathjax = 'cdn')
TeX("\\theta = 0.8 \\hat\\theta")
plot_ly(
x = c(1, 2, 3, 4),
y = c(1, 4, 9, 16),
name = TeX("\\alpha_{1c} = 352 \\pm 11 \\text{ km s}^{-1}"))
# `enquo()` defuses the expression supplied by your user
f <- function(arg) {
enquo(arg)
}
f(1 + 1)
library(rlang)
# `enquo()` defuses the expression supplied by your user
f <- function(arg) {
enquo(arg)
}
f(1 + 1)
f(1 + 1)
# `enquos()` works with arguments and dots. It returns a list of
# expressions
f <- function(...) {
enquos(...)
}
f(1 + 1, 2 * 10)
colfunc <- colorRampPalette(c("black", "white"))
colfunc
colfunc<-colorRampPalette(c("#4779B3","#3E714D","yellow"))
plot(rep(1,50),col=(colfunc(50)), pch=19,cex=2)
colfunc<-colorRampPalette(c("#4779B3","#3E714D","#5CA56D","yellow"))
plot(rep(1,50),col=(colfunc(50)), pch=19,cex=2)
plot(rep(1,10),col=(colfunc(10)), pch=19,cex=2)
colfunc<-colorRampPalette(c("#4779B3","#3E714D","#5CA56D","yellow"))
plot(rep(1,50),col=(colfunc(50)), pch=19,cex=2)
colfunc<-colorRampPalette(c("#3E714D","#5CA56D","yellow"))
plot(rep(1,50),col=(colfunc(50)), pch=19,cex=2)
colfunc<-colorRampPalette(c("#3E714D","#5CA56D","yellow"))
plot(rep(1,7),col=(colfunc(7)), pch=19,cex=2)
library(tidyverse)
summarise_mean <- function(data, vars) {
data %>% summarise(n = n(), across({{ vars }}, mean))
}
mtcars %>%
group_by(cyl) %>%
summarise_mean(where(is.numeric))
where(is.numeric)
is.factor(iris[[4]])
is.factor(iris[[5]])
head(iris)
iris %>% select(where(is.factor))
where(is.factor)
library(testthat)        # load testthat package
library(overviewR)       # load our package
install.packages("overviewR")
context("check-output")  # Our file is called "test-check_output.R"
library(testthat)        # load testthat package
library(overviewR)       # load our package
# Test whether the output is a data frame
test_that("overview_tab() returns a data frame", {
output_table <- overview_tab(dat = toydata, id = ccode, time = year)
expect_is(output_table, "data.frame")
})
output_table <- overview_tab(dat = toydata, id = ccode, time = year)
output_table
toydata
expect_is(output_table, "data.frame")
output_table <- overview_tab(dat = toydata, id = ccode, time = year)
output_table
install.packages("rhub")
setwd("D:/github/Courses/SP2600-I25")
setwd("D:/github/Courses/XS3310-I25")
365/7
setwd("D:/github/Courses/SP2600-I25/Tema_2")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(forecast)
library(fpp2)
library(astsa)
library(tidyverse)
library(TSA)
library(MTS)
library(marima)
library(dse)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(forecast)
#library(fpp2)
library(astsa)
library(tidyverse)
#library(TSA)
library(MTS)
library(marima)
da=read.table("q-gdp-ukcaus.txt",header=T)
tsplot(da[,3:5])
loggdp=log(da[,3:5])
tsplot(loggdp)
x=loggdp[2:126,]-loggdp[1:125,]
x=x*100
tsplot(x)
acf(x)
m1=MTS::VAR(x,1)
m2=MTS::VAR(x,2)
acf(x)
m1=MTS::VAR(x,1)
m2=MTS::VAR(x,2)
m3=MTS::VARorder(x,maxp=15)
mvars=vars::VAR(x,p=1)
summary(mvars)
mvars=vars::VAR(x,p=1)
summary(mvars)
m3=VARorder(x,maxp=15)
CI=data.frame(order=0:15,AIC=m3$aic,BIC=m3$bic,HQ=m3$hq)
CI%>%gather(
key = "C.Info",
value = "value",
AIC,BIC,HQ
) %>% ggplot() +
geom_line( aes(x = order, y = value, group=C.Info,color=C.Info))
mq(m1$residuals,adj=9)
1*3^2#p*k^2
mq(m2$residuals,adj=18)
2*3^2#p*k^2
mq(m1$residuals,adj=9)
1*3^2 #p*k^2
mq(m2$residuals,adj=18)
MTSdiag(m2,adj=18)
da=read.table("m-dec15678-6111.txt",header=T)
head(da)
x=log(da[,2:6]+1)*100
rtn=cbind(x$dec5,x$dec8)
tdx=c(1:612)/12+1961
head(da)
x=log(da[,2:6]+1)*100
rtn=cbind(x$dec5,x$dec8)
tdx=c(1:612)/12+1961
par(mfcol=c(2,1))
plot(tdx,rtn[,1],type='l',xlab='year',ylab='d5')
plot(tdx,rtn[,2],type='l',xlab='year',ylab='d8')
ccm(rtn)
ccm(rtn)
MTS::VMAorder(rtn,lag=20)
m1=MTS::VMA(rtn,q=1)
m2=MTS::VMA(rtn,q=2)
